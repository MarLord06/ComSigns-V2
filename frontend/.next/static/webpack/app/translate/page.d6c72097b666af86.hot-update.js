"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/translate/page",{

/***/ "(app-pages-browser)/./lib/services/translation.service.ts":
/*!*********************************************!*\
  !*** ./lib/services/translation.service.ts ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TranslationService: () => (/* binding */ TranslationService),\n/* harmony export */   translationService: () => (/* binding */ translationService)\n/* harmony export */ });\n/**\n * Service layer para comunicaci贸n con el backend\n */ // Types para el API\n// Configuraci贸n del API\n// API Configuration\nconst API_BASE_URL = 'http://localhost:8000';\nconst DEFAULT_TIMEOUT = 10000; // 10 segundos\n// Cliente HTTP personalizado\nclass APIClient {\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const config = {\n            ...options,\n            headers: {\n                ...options.headers\n            }\n        };\n        // Timeout wrapper\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), this.timeout);\n        try {\n            const response = await fetch(url, {\n                ...config,\n                signal: controller.signal\n            });\n            clearTimeout(timeoutId);\n            if (!response.ok) {\n                const errorData = await response.json().catch(()=>({}));\n                throw new Error(errorData.error || \"HTTP \".concat(response.status));\n            }\n            return await response.json();\n        } catch (error) {\n            clearTimeout(timeoutId);\n            if (error instanceof Error) {\n                if (error.name === 'AbortError') {\n                    throw new Error('Request timeout');\n                }\n                throw error;\n            }\n            throw new Error('Unknown error occurred');\n        }\n    }\n    async post(endpoint, data) {\n        return this.request(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n    async get(endpoint) {\n        return this.request(endpoint, {\n            method: 'GET'\n        });\n    }\n    async postFormData(endpoint, formData) {\n        return this.request(endpoint, {\n            method: 'POST',\n            body: formData\n        });\n    }\n    constructor(){\n        this.baseURL = API_BASE_URL;\n        this.timeout = DEFAULT_TIMEOUT;\n    }\n}\n// Translation Service\nclass TranslationService {\n    /**\n   * Enviar frame para traducci贸n al backend ML\n   */ async translateFrame(frame) {\n        const formData = new FormData();\n        formData.append('file', frame); // Cambiar 'frame' por 'file'\n        try {\n            // Endpoint del backend FastAPI\n            const response = await this.client.postFormData('/api/v1/ml/pipeline/translate-frame', formData);\n            return response;\n        } catch (error) {\n            console.error('Translation error:', error);\n            throw new Error(error instanceof Error ? error.message : 'Translation failed');\n        }\n    }\n    /**\n   * Health check del backend ML\n   */ async healthCheck() {\n        try {\n            return await this.client.get('/api/v1/ml/health');\n        } catch (e) {\n            throw new Error('Health check failed');\n        }\n    }\n    /**\n   * Obtener informaci贸n del modelo\n   */ async getModelInfo() {\n        try {\n            return await this.client.post('/api/v1/ml/model-info');\n        } catch (e) {\n            throw new Error('Failed to get model info');\n        }\n    }\n    constructor(){\n        this.client = new APIClient();\n    }\n}\n// Singleton instance\nconst translationService = new TranslationService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/services/translation.service.ts\n"));

/***/ })

});