{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marloveper__/Documents/proyectos/ccc/ComSigns-DEV/ComSigns-V2/frontend/lib/types/realtime.ts"],"sourcesContent":["// Tipos para protocolo WebSocket de predicción en tiempo real\n\nexport type SessionMessage = {\n  type: 'session';\n  session_id: string;\n  message: string;\n};\n\nexport type PredictionMessage = {\n  type: 'prediction';\n  letter: string; // puede ser '' si no hay detección\n  confidence: number; // 0-1\n  processing_time_ms: number;\n  status: string; // ok | no_hand_detected | error\n  landmarks_detected: boolean;\n  session_id: string;\n};\n\nexport type ErrorMessage = {\n  type: 'error';\n  error: string;\n  session_id?: string;\n};\n\nexport type PongMessage = {\n  type: 'pong';\n  timestamp?: string | number;\n};\n\nexport type UnknownMessage = { type: string; [k: string]: any };\n\nexport type IncomingRealtimeMessage =\n  | SessionMessage\n  | PredictionMessage\n  | ErrorMessage\n  | PongMessage\n  | UnknownMessage;\n\nexport type OutgoingFrameMessage = {\n  type: 'frame';\n  image: string; // base64 sin prefijo\n  timestamp?: number;\n};\n\nexport type OutgoingPingMessage = { type: 'ping'; timestamp?: number };\n\nexport type OutgoingRealtimeMessage = OutgoingFrameMessage | OutgoingPingMessage;\n\nexport interface PredictionBase {\n  letter: string;\n  confidence: number;\n  processingTimeMs: number;\n  hasLandmarks: boolean;\n  raw?: PredictionMessage;\n}\n\nexport const CONFIDENCE_THRESHOLDS = {\n  ACCEPT: 0.6,\n  STRONG: 0.8,\n  LOW: 0.4,\n} as const;\n\nexport type ConfidenceLevel = 'low' | 'medium' | 'high';\n\nexport function classifyConfidence(c: number): ConfidenceLevel {\n  if (c >= CONFIDENCE_THRESHOLDS.STRONG) return 'high';\n  if (c >= CONFIDENCE_THRESHOLDS.ACCEPT) return 'medium';\n  return 'low';\n}\n\nexport function mapPredictionMessage(msg: PredictionMessage): PredictionBase {\n  return {\n    letter: msg.letter || '',\n    confidence: msg.confidence ?? 0,\n    processingTimeMs: msg.processing_time_ms ?? 0,\n    hasLandmarks: !!msg.landmarks_detected,\n    raw: msg,\n  };\n}\n"],"names":[],"mappings":"AAAA,8DAA8D;;;;;;AAwDvD,MAAM,wBAAwB;IACnC,QAAQ;IACR,QAAQ;IACR,KAAK;AACP;AAIO,SAAS,mBAAmB,CAAS;IAC1C,IAAI,KAAK,sBAAsB,MAAM,EAAE,OAAO;IAC9C,IAAI,KAAK,sBAAsB,MAAM,EAAE,OAAO;IAC9C,OAAO;AACT;AAEO,SAAS,qBAAqB,GAAsB;IACzD,OAAO;QACL,QAAQ,IAAI,MAAM,IAAI;QACtB,YAAY,IAAI,UAAU,IAAI;QAC9B,kBAAkB,IAAI,kBAAkB,IAAI;QAC5C,cAAc,CAAC,CAAC,IAAI,kBAAkB;QACtC,KAAK;IACP;AACF","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/marloveper__/Documents/proyectos/ccc/ComSigns-DEV/ComSigns-V2/frontend/lib/services/realtime.service.ts"],"sourcesContent":["import { IncomingRealtimeMessage, OutgoingFrameMessage, OutgoingPingMessage, PredictionMessage, mapPredictionMessage, PredictionBase } from '@/lib/types/realtime';\n\nexport type RealtimeEvents = {\n  open: () => void;\n  close: (ev?: CloseEvent) => void;\n  error: (err: any) => void;\n  session: (sessionId: string) => void;\n  prediction: (prediction: PredictionBase) => void;\n  raw: (msg: IncomingRealtimeMessage) => void;\n  reconnect: (attempt: number, delayMs: number) => void;\n};\n\nexport type RealtimeStatus = 'idle' | 'connecting' | 'open' | 'closing' | 'reconnecting' | 'error';\n\ninterface RealtimeOptions {\n  url?: string;\n  autoReconnect?: boolean;\n  maxReconnectAttempts?: number;\n  backoffInitialMs?: number;\n  backoffFactor?: number;\n  backoffMaxMs?: number;\n  heartbeatIntervalMs?: number; // ping interval\n  heartbeatTimeoutMs?: number;  // time to wait pong\n  log?: boolean;\n}\n\nconst DEFAULTS: Required<Omit<RealtimeOptions, 'url'>> = {\n  autoReconnect: true,\n  maxReconnectAttempts: 10,\n  backoffInitialMs: 500,\n  backoffFactor: 2,\n  backoffMaxMs: 5000,\n  heartbeatIntervalMs: 20000,\n  heartbeatTimeoutMs: 5000,\n  log: false,\n};\n\nexport class RealtimePredictionWS {\n  private ws: WebSocket | null = null;\n  private opts: Required<Omit<RealtimeOptions, 'url'>>;\n  private url: string;\n  private status: RealtimeStatus = 'idle';\n  private listeners: { [K in keyof RealtimeEvents]?: RealtimeEvents[K][] } = {};\n  private reconnectAttempts = 0;\n  private heartbeatTimer: any = null;\n  private heartbeatTimeout: any = null;\n  private sessionId: string | null = null;\n\n  constructor(options: RealtimeOptions = {}) {\n    const apiBase = process.env.NEXT_PUBLIC_API_BASE || process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n    const wsBase = options.url || (apiBase.startsWith('https') ? apiBase.replace('https', 'wss') : apiBase.replace('http', 'ws'));\n    this.url = wsBase.replace(/\\/$/, '') + '/api/v1/ml/predict';\n    this.opts = { ...DEFAULTS, ...options };\n    if (this.opts.log) console.log('[RealtimeWS] URL construida:', this.url);\n  }\n\n  getStatus() { return this.status; }\n  getSessionId() { return this.sessionId; }\n\n  on<K extends keyof RealtimeEvents>(event: K, cb: RealtimeEvents[K]) {\n    const arr = (this.listeners[event] as RealtimeEvents[K][] | undefined) || [];\n    arr.push(cb);\n    this.listeners[event] = arr as any;\n    return () => {\n      const list = (this.listeners[event] as RealtimeEvents[K][] | undefined) || [];\n      this.listeners[event] = list.filter(l => l !== cb) as any;\n    };\n  }\n\n  private emit<K extends keyof RealtimeEvents>(event: K, ...args: Parameters<RealtimeEvents[K]>) {\n    this.listeners[event]?.forEach(l => {\n      try { (l as any)(...args); } catch (e) { if (this.opts.log) console.error('[Realtime] listener error', e); }\n    });\n  }\n\n  connect() {\n    if (this.ws && (this.status === 'open' || this.status === 'connecting')) {\n      if (this.opts.log) console.log('[RealtimeWS] Ya conectado/conectando, estado:', this.status);\n      return;\n    }\n    this.status = this.reconnectAttempts > 0 ? 'reconnecting' : 'connecting';\n    if (this.opts.log) console.log('[RealtimeWS] Intentando conectar a:', this.url);\n    try {\n      this.ws = new WebSocket(this.url);\n    } catch (e) {\n      if (this.opts.log) console.error('[RealtimeWS] Error creando WebSocket:', e);\n      this.status = 'error';\n      this.emit('error', e);\n      return;\n    }\n\n    this.ws.onopen = () => {\n      if (this.opts.log) console.log('[RealtimeWS] Conexión abierta');\n      this.status = 'open';\n      this.emit('open');\n      this.reconnectAttempts = 0;\n      this.startHeartbeat();\n    };\n\n    this.ws.onmessage = (ev) => {\n      if (this.opts.log) console.log('[RealtimeWS] Mensaje recibido:', ev.data);\n      let parsed: IncomingRealtimeMessage;\n      try { parsed = JSON.parse(ev.data); } catch { return; }\n      this.emit('raw', parsed);\n      switch (parsed.type) {\n        case 'session':\n          this.sessionId = (parsed as any).session_id;\n          this.emit('session', this.sessionId!);\n          break;\n        case 'prediction': {\n          const p = mapPredictionMessage(parsed as PredictionMessage);\n          this.emit('prediction', p);\n          break; }\n        case 'pong':\n          this.clearHeartbeatTimeout();\n          break;\n        case 'error':\n          this.emit('error', (parsed as any).error);\n          break;\n        default:\n          // ignore or expose via raw\n          break;\n      }\n    };\n\n    this.ws.onerror = (e) => {\n      if (this.opts.log) console.error('[RealtimeWS] Error en WebSocket:', e);\n      this.emit('error', e);\n    };\n\n    this.ws.onclose = (e) => {\n      if (this.opts.log) console.log('[RealtimeWS] Conexión cerrada:', e.code, e.reason);\n      this.stopHeartbeat();\n      this.emit('close', e);\n      if (this.status !== 'closing') {\n        this.status = 'error';\n        if (this.opts.autoReconnect && this.reconnectAttempts < this.opts.maxReconnectAttempts) {\n          this.scheduleReconnect();\n        }\n      }\n    };\n  }\n\n  private scheduleReconnect() {\n    this.reconnectAttempts += 1;\n    const delay = Math.min(this.opts.backoffInitialMs * Math.pow(this.opts.backoffFactor, this.reconnectAttempts - 1), this.opts.backoffMaxMs);\n    this.emit('reconnect', this.reconnectAttempts, delay);\n    setTimeout(() => this.connect(), delay);\n  }\n\n  private startHeartbeat() {\n    if (this.opts.heartbeatIntervalMs <= 0) return;\n    this.stopHeartbeat();\n    this.heartbeatTimer = setInterval(() => {\n      if (this.ws && this.status === 'open') {\n        this.sendPing();\n        this.setHeartbeatTimeout();\n      }\n    }, this.opts.heartbeatIntervalMs);\n  }\n\n  private stopHeartbeat() {\n    if (this.heartbeatTimer) clearInterval(this.heartbeatTimer);\n    this.heartbeatTimer = null;\n    this.clearHeartbeatTimeout();\n  }\n\n  private setHeartbeatTimeout() {\n    this.clearHeartbeatTimeout();\n    this.heartbeatTimeout = setTimeout(() => {\n      if (this.opts.log) console.warn('[Realtime] Heartbeat timeout - forcing reconnect');\n      this.forceReconnect();\n    }, this.opts.heartbeatTimeoutMs);\n  }\n\n  private clearHeartbeatTimeout() {\n    if (this.heartbeatTimeout) clearTimeout(this.heartbeatTimeout);\n    this.heartbeatTimeout = null;\n  }\n\n  private forceReconnect() {\n    if (this.ws) {\n      try { this.ws.close(); } catch {}\n    }\n  }\n\n  sendFrame(base64Image: string) {\n    if (!this.ws || this.status !== 'open') {\n      if (this.opts.log) console.warn('[RealtimeWS] No se puede enviar frame, ws:', !!this.ws, 'status:', this.status);\n      return;\n    }\n    const msg: OutgoingFrameMessage = { type: 'frame', image: base64Image, timestamp: Date.now() };\n    if (this.opts.log) console.log('[RealtimeWS] Enviando frame, tamaño:', base64Image.length, 'chars');\n    this.ws.send(JSON.stringify(msg));\n  }\n\n  sendPing() {\n    if (!this.ws || this.status !== 'open') return;\n    const msg: OutgoingPingMessage = { type: 'ping', timestamp: Date.now() };\n    this.ws.send(JSON.stringify(msg));\n  }\n\n  close() {\n    this.status = 'closing';\n    this.stopHeartbeat();\n    if (this.ws) {\n      try { this.ws.close(); } catch {}\n    }\n    this.ws = null;\n    this.status = 'idle';\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/marloveper__/Documents/proyectos/ccc/ComSigns-DEV/ComSigns-V2/frontend/lib/hooks/use-realtime-prediction.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { RealtimePredictionWS, RealtimeStatus } from '@/lib/services/realtime.service';\nimport { PredictionBase } from '@/lib/types/realtime';\n\ninterface UseRealtimePredictionOptions {\n  autoConnect?: boolean;\n  log?: boolean;\n}\n\nexport function useRealtimePrediction(opts: UseRealtimePredictionOptions = {}) {\n  const serviceRef = useRef<RealtimePredictionWS | null>(null);\n  const [status, setStatus] = useState<RealtimeStatus>('idle');\n  const [lastPrediction, setLastPrediction] = useState<PredictionBase | null>(null);\n  const [sessionId, setSessionId] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [reconnectInfo, setReconnectInfo] = useState<{ attempt: number; delayMs: number } | null>(null);\n\n  // Crear callback estable para manejar predicciones\n  const handlePrediction = useCallback((p: PredictionBase) => {\n    if (opts.log) console.log('[RT] prediction', p);\n    setLastPrediction(prev => {\n      // Solo actualizar si hay cambios significativos para evitar re-renders innecesarios\n      if (!prev || prev.letter !== p.letter || Math.abs((prev.confidence || 0) - (p.confidence || 0)) > 0.01) {\n        return p;\n      }\n      return prev;\n    });\n  }, [opts.log]);\n\n  if (!serviceRef.current) {\n    serviceRef.current = new RealtimePredictionWS({ log: opts.log });\n  }\n\n  const connect = useCallback(() => {\n    serviceRef.current?.connect();\n  }, []);\n  const disconnect = useCallback(() => {\n    serviceRef.current?.close();\n    setStatus('idle');\n  }, []);\n  const sendFrame = useCallback((base64: string) => {\n    serviceRef.current?.sendFrame(base64);\n  }, []);\n\n  useEffect(() => {\n    const svc = serviceRef.current!;\n    const offOpen = svc.on('open', () => { if (opts.log) console.log('[RT] open'); setStatus('open'); setError(null); });\n    const offClose = svc.on('close', () => { if (opts.log) console.log('[RT] close'); setStatus('idle'); });\n    const offErr = svc.on('error', (e) => { if (opts.log) console.error('[RT] error', e); setError(typeof e === 'string' ? e : 'Realtime error'); setStatus('error'); });\n    const offSess = svc.on('session', id => { if (opts.log) console.log('[RT] session', id); setSessionId(id); });\n    const offPred = svc.on('prediction', handlePrediction);\n    const offReconnect = svc.on('reconnect', (attempt, delayMs) => { if (opts.log) console.warn('[RT] reconnect', { attempt, delayMs }); setStatus('reconnecting'); setReconnectInfo({ attempt, delayMs }); });\n    const offRaw = svc.on('raw', msg => { if (opts.log) console.debug('[RT] raw', msg); });\n\n    if (opts.autoConnect) connect();\n    return () => { offOpen(); offClose(); offErr(); offSess(); offPred(); offReconnect(); offRaw(); };\n  }, [opts.autoConnect, handlePrediction, opts.log]);\n\n  return {\n    status,\n    lastPrediction,\n    sessionId,\n    error,\n    reconnectInfo,\n    connect,\n    disconnect,\n    sendFrame,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/marloveper__/Documents/proyectos/ccc/ComSigns-DEV/ComSigns-V2/frontend/lib/hooks/use-advanced-camera-v2.ts"],"sourcesContent":["/**\n * useAdvancedCamera - Hook mejorado basado en el hook actual que funciona\n * Mantiene la funcionalidad existente pero con mejor modularización\n */\n\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport { TranslationResponse } from '@/lib/services/translation.service';\nimport { useRealtimePrediction } from './use-realtime-prediction';\nimport { CONFIDENCE_THRESHOLDS } from '@/lib/types/realtime';\n\nexport interface AdvancedCameraOptions {\n  debug?: boolean;\n  autoConnect?: boolean;\n  confidenceThreshold?: number;\n  frameInterval?: number;\n  cameraConstraints?: {\n    width?: number;\n    height?: number;\n    facingMode?: 'user' | 'environment';\n  };\n}\n\nexport interface CameraHookResult {\n  // Referencias\n  videoRef: React.RefObject<HTMLVideoElement | null>;\n  \n  // Estados de cámara\n  isSupported: boolean;\n  permission: 'granted' | 'denied' | 'prompt';\n  isInitializing: boolean;\n  error: string;\n  \n  // Estados de traducción\n  isTranslating: boolean;\n  currentPrediction: string;\n  confidence: number;\n  lastTranslation: TranslationResponse | null;\n  realtimeStatus: string;\n  \n  // Métodos\n  initialize: () => Promise<boolean>;\n  cleanup: () => void;\n  captureFrame: () => Promise<File | null>;\n  startRealtimeTranslation: (cameraViewRef?: React.RefObject<any>) => void;\n  stopRealtimeTranslation: () => void;\n  \n  // Nuevas funcionalidades\n  getStats: () => CameraStats;\n  updateOptions: (newOptions: Partial<AdvancedCameraOptions>) => void;\n}\n\nexport interface CameraStats {\n  totalFramesSent: number;\n  successfulPredictions: number;\n  averageConfidence: number;\n  sessionDuration: number;\n  droppedFrames: number;\n}\n\nexport function useAdvancedCamera(options: AdvancedCameraOptions = {}): CameraHookResult {\n  // Configuración con defaults\n  const config = {\n    debug: false,\n    autoConnect: false,\n    confidenceThreshold: CONFIDENCE_THRESHOLDS.ACCEPT,\n    frameInterval: 200,\n    cameraConstraints: {\n      width: 640,\n      height: 480,\n      facingMode: 'user' as const\n    },\n    ...options\n  };\n\n  // Estados base (igual que el hook original)\n  const [isSupported, setIsSupported] = useState(false);\n  const [permission, setPermission] = useState<'granted' | 'denied' | 'prompt'>('prompt');\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [error, setError] = useState<string>('');\n  const [isTranslating, setIsTranslating] = useState(false);\n  const [currentPrediction, setCurrentPrediction] = useState<string>('');\n  const [confidence, setConfidence] = useState<number>(0);\n  const [lastTranslation, setLastTranslation] = useState<TranslationResponse | null>(null);\n  \n  // Referencias (igual que el hook original)\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const streamRef = useRef<MediaStream | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Nuevos estados para estadísticas\n  const [stats, setStats] = useState<CameraStats>({\n    totalFramesSent: 0,\n    successfulPredictions: 0,\n    averageConfidence: 0,\n    sessionDuration: 0,\n    droppedFrames: 0\n  });\n  const sessionStartTime = useRef<number>(Date.now());\n\n  // Hook de predicción en tiempo real (igual que el original)\n  const { \n    status: realtimeStatus, \n    lastPrediction: realtimePrediction, \n    error: realtimeError, \n    connect: connectRealtime, \n    disconnect: disconnectRealtime, \n    sendFrame \n  } = useRealtimePrediction({ \n    autoConnect: config.autoConnect, \n    log: config.debug \n  });\n\n  // Debug logging\n  const log = useCallback((prefix: string, ...args: unknown[]) => {\n    if (config.debug) {\n      console.log(`[ADV_CAM_${prefix}]`, ...args);\n    }\n  }, [config.debug]);\n\n  // Efectos del hook original\n  useEffect(() => { \n    if (realtimeError) setError(realtimeError); \n  }, [realtimeError]);\n\n  useEffect(() => {\n    if (!realtimePrediction) return;\n    \n    log('PREDICTION', realtimePrediction);\n    \n    const letter = realtimePrediction.letter || '';\n    const conf = realtimePrediction.confidence || 0;\n    \n    // Actualizar estadísticas\n    setStats(prev => ({\n      ...prev,\n      totalFramesSent: prev.totalFramesSent + 1,\n      successfulPredictions: conf >= config.confidenceThreshold ? prev.successfulPredictions + 1 : prev.successfulPredictions,\n      averageConfidence: ((prev.averageConfidence * prev.totalFramesSent) + conf) / (prev.totalFramesSent + 1),\n      sessionDuration: Date.now() - sessionStartTime.current\n    }));\n    \n    if (conf >= config.confidenceThreshold && letter) {\n      setCurrentPrediction(letter);\n    } else if (!letter) {\n      setCurrentPrediction('?');\n    }\n    \n    setConfidence(conf);\n    setLastTranslation({\n      success: true,\n      method: 'websocket_prediction',\n      result: {\n        text: letter || '?',\n        confidence: conf,\n        processing_time_ms: realtimePrediction.processingTimeMs || 0,\n        signs_detected: realtimePrediction.hasLandmarks ? 1 : 0,\n        detailed_predictions: []\n      }\n    });\n  }, [realtimePrediction, config.confidenceThreshold, log]);\n\n  useEffect(() => {\n    setIsSupported(\n      typeof navigator !== 'undefined' && \n      'mediaDevices' in navigator && \n      'getUserMedia' in navigator.mediaDevices\n    );\n  }, []);\n\n  // Función de inicialización mejorada\n  const initialize = useCallback(async (): Promise<boolean> => {\n    if (!isSupported) {\n      setError('Camera not supported in this browser');\n      return false;\n    }\n\n    setIsInitializing(true);\n    setError('');\n    \n    try {\n      log('INIT', 'Solicitando permisos de cámara...');\n      \n      const constraints: MediaStreamConstraints = {\n        video: {\n          width: { ideal: config.cameraConstraints.width },\n          height: { ideal: config.cameraConstraints.height },\n          facingMode: config.cameraConstraints.facingMode\n        },\n        audio: false\n      };\n\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      streamRef.current = stream;\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.autoplay = true;\n        videoRef.current.playsInline = true;\n        videoRef.current.muted = true;\n        \n        // Esperar a que el video esté listo\n        await new Promise<void>((resolve, reject) => {\n          const video = videoRef.current!;\n          \n          const onLoadedMetadata = () => {\n            video.removeEventListener('loadedmetadata', onLoadedMetadata);\n            video.removeEventListener('error', onError);\n            resolve();\n          };\n          \n          const onError = (e: Event) => {\n            video.removeEventListener('loadedmetadata', onLoadedMetadata);\n            video.removeEventListener('error', onError);\n            reject(new Error('Video load error'));\n          };\n          \n          video.addEventListener('loadedmetadata', onLoadedMetadata);\n          video.addEventListener('error', onError);\n          \n          // Si ya está cargado\n          if (video.readyState >= 1) {\n            onLoadedMetadata();\n          }\n        });\n        \n        // Forzar reproducción\n        await videoRef.current.play();\n      }\n      \n      setPermission('granted');\n      log('INIT', 'Cámara inicializada correctamente');\n      return true;\n      \n    } catch (error: any) {\n      setPermission('denied');\n      const errorMsg = error.name === 'NotAllowedError' \n        ? 'Camera permission denied' \n        : `Camera initialization failed: ${error.message}`;\n      setError(errorMsg);\n      log('INIT_ERROR', errorMsg, error);\n      return false;\n    } finally {\n      setIsInitializing(false);\n    }\n  }, [isSupported, config.cameraConstraints, log]);\n\n  // Función de captura de frame mejorada\n  const captureAndSendFrame = useCallback((cameraViewRef?: React.RefObject<any>, forceTranslating = false) => {\n    const shouldTranslate = forceTranslating || isTranslating;\n    \n    if (!shouldTranslate) {\n      log('FRAME', 'No traduciendo, saltando frame');\n      return;\n    }\n    \n    if (!cameraViewRef?.current) {\n      log('FRAME', 'Sin cameraViewRef, usando videoRef directo');\n      \n      // Fallback: usar videoRef directo\n      if (!videoRef.current || videoRef.current.readyState < 2) {\n        setStats(prev => ({ ...prev, droppedFrames: prev.droppedFrames + 1 }));\n        return;\n      }\n      \n      try {\n        if (!canvasRef.current) canvasRef.current = document.createElement('canvas');\n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n        \n        canvas.width = video.videoWidth || config.cameraConstraints.width || 640;\n        canvas.height = video.videoHeight || config.cameraConstraints.height || 480;\n        \n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n        \n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataUrl = canvas.toDataURL('image/jpeg', 0.8);\n        const base64 = dataUrl.split(',')[1];\n        \n        if (base64) {\n          sendFrame(base64);\n          log('FRAME', `Frame enviado desde videoRef (${base64.length} chars)`);\n        }\n      } catch (e) {\n        log('FRAME_ERROR', 'Error capturando desde videoRef:', e);\n        setStats(prev => ({ ...prev, droppedFrames: prev.droppedFrames + 1 }));\n      }\n      return;\n    }\n    \n    // Usar cameraViewRef (comportamiento original)\n    try {\n      const videoElement = cameraViewRef.current.getVideoElement?.() || videoRef.current;\n      if (!videoElement || videoElement.readyState < 2) {\n        setStats(prev => ({ ...prev, droppedFrames: prev.droppedFrames + 1 }));\n        return;\n      }\n      \n      if (!canvasRef.current) canvasRef.current = document.createElement('canvas');\n      const canvas = canvasRef.current;\n        canvas.width = videoElement.videoWidth || config.cameraConstraints.width || 640;\n        canvas.height = videoElement.videoHeight || config.cameraConstraints.height || 480;      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      \n      ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n      const dataUrl = canvas.toDataURL('image/jpeg', 0.8);\n      const base64 = dataUrl.split(',')[1];\n      \n      if (base64) {\n        sendFrame(base64);\n        log('FRAME', `Frame enviado desde cameraViewRef (${base64.length} chars)`);\n      }\n    } catch (e) {\n      log('FRAME_ERROR', 'Error capturando frame:', e);\n      setStats(prev => ({ ...prev, droppedFrames: prev.droppedFrames + 1 }));\n    }\n  }, [isTranslating, sendFrame, config.cameraConstraints, log]);\n\n  // Funciones de traducción (igual que el original pero con mejoras)\n  const startRealtimeTranslation = useCallback((cameraViewRef?: React.RefObject<any>) => {\n    if (isTranslating) return;\n    \n    log('RT_START', 'Iniciando traducción en tiempo real');\n    sessionStartTime.current = Date.now();\n    \n    connectRealtime();\n    setIsTranslating(true);\n    setCurrentPrediction('');\n    setConfidence(0);\n    \n    intervalRef.current = setInterval(() => {\n      captureAndSendFrame(cameraViewRef, true);\n    }, config.frameInterval);\n    \n    log('RT_START', `Interval iniciado con ID: ${intervalRef.current}`);\n  }, [isTranslating, connectRealtime, captureAndSendFrame, config.frameInterval, log]);\n\n  const stopRealtimeTranslation = useCallback(() => {\n    if (!isTranslating) return;\n    \n    log('RT_STOP', 'Deteniendo traducción');\n    setIsTranslating(false);\n    \n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    \n    disconnectRealtime();\n  }, [isTranslating, disconnectRealtime, log]);\n\n  // Función de limpieza mejorada\n  const cleanup = useCallback(() => {\n    log('CLEANUP', 'Limpiando recursos');\n    \n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    \n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    \n    stopRealtimeTranslation();\n    setPermission('prompt');\n    setError('');\n    \n    // Resetear estadísticas\n    setStats({\n      totalFramesSent: 0,\n      successfulPredictions: 0,\n      averageConfidence: 0,\n      sessionDuration: 0,\n      droppedFrames: 0\n    });\n  }, [stopRealtimeTranslation, log]);\n\n  // Función de captura de frame individual\n  const captureFrame = useCallback((): Promise<File | null> => {\n    return new Promise((resolve) => {\n      if (!videoRef.current || videoRef.current.readyState < 2) {\n        resolve(null);\n        return;\n      }\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        resolve(null);\n        return;\n      }\n\n      const video = videoRef.current;\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      ctx.drawImage(video, 0, 0);\n\n      canvas.toBlob((blob) => {\n        if (blob) {\n          resolve(new File([blob], 'frame.jpg', { type: 'image/jpeg' }));\n        } else {\n          resolve(null);\n        }\n      }, 'image/jpeg', 0.8);\n    });\n  }, []);\n\n  // Nuevas funciones\n  const getStats = useCallback((): CameraStats => {\n    return {\n      ...stats,\n      sessionDuration: Date.now() - sessionStartTime.current\n    };\n  }, [stats]);\n\n  const updateOptions = useCallback((newOptions: Partial<AdvancedCameraOptions>) => {\n    Object.assign(config, newOptions);\n    log('CONFIG', 'Opciones actualizadas:', newOptions);\n  }, [config, log]);\n\n  // Cleanup en unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    // Referencias\n    videoRef,\n    \n    // Estados\n    isSupported,\n    permission,\n    isInitializing,\n    error,\n    isTranslating,\n    currentPrediction,\n    confidence,\n    lastTranslation,\n    realtimeStatus,\n    \n    // Métodos originales\n    initialize,\n    cleanup,\n    captureFrame,\n    startRealtimeTranslation,\n    stopRealtimeTranslation,\n    \n    // Nuevos métodos\n    getStats,\n    updateOptions\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":["file:///Users/marloveper__/Documents/proyectos/ccc/ComSigns-DEV/ComSigns-V2/frontend/app/test-services/page.tsx"],"sourcesContent":["/**\n * Página de prueba para validar los nuevos servicios\n */\n\n'use client';\n\nimport { useState } from 'react';\nimport { useAdvancedCamera } from '../../lib/hooks/use-advanced-camera-v2';\n\nexport default function TestServicesPage() {\n  const [testResults, setTestResults] = useState<string[]>([]);\n\n  const camera = useAdvancedCamera({\n    debug: true,\n    cameraConstraints: {\n      width: 640,\n      height: 480,\n      facingMode: 'user'\n    }\n  });\n\n  const addResult = (result: string) => {\n    setTestResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${result}`]);\n  };\n\n  const testCameraService = async () => {\n    addResult('🎥 Probando CameraService...');\n    const success = await camera.initialize();\n    if (success) {\n      addResult('✅ CameraService: Inicialización exitosa');\n    } else {\n      addResult('❌ CameraService: Error en inicialización');\n    }\n  };\n\n  const testWebSocketService = () => {\n    addResult('🔌 Probando WebSocketService...');\n    try {\n      camera.startRealtimeTranslation();\n      addResult('✅ WebSocketService: Iniciando conexión...');\n      setTimeout(() => {\n        camera.stopRealtimeTranslation();\n        addResult('🔌 WebSocketService: Desconectado');\n      }, 5000);\n    } catch (error) {\n      addResult('❌ WebSocketService: Error de conexión');\n    }\n  };\n\n  const testFrameCapture = async () => {\n    addResult('📷 Probando FrameCaptureService...');\n    try {\n      const frame = await camera.captureFrame();\n      if (frame) {\n        addResult(`✅ FrameCaptureService: Frame capturado (${frame.size} bytes)`);\n      } else {\n        addResult('❌ FrameCaptureService: No se pudo capturar frame');\n      }\n    } catch (error) {\n      addResult(`❌ FrameCaptureService: Error - ${error}`);\n    }\n  };\n\n  const clearResults = () => {\n    setTestResults([]);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-8\">\n          🧪 Test de Nuevos Servicios\n        </h1>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Panel de Video */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">📹 Vista de Cámara</h2>\n            <div className=\"aspect-video bg-gray-900 rounded-lg overflow-hidden\">\n              <video\n                ref={camera.videoRef}\n                className=\"w-full h-full object-cover\"\n                autoPlay\n                playsInline\n                muted\n              />\n            </div>\n            \n            {/* Estados */}\n            <div className=\"mt-4 space-y-2\">\n              <div className=\"flex justify-between\">\n                <span>Estado Cámara:</span>\n                <span className={`px-2 py-1 rounded text-sm ${\n                  camera.permission === 'granted' ? 'bg-green-100 text-green-800' :\n                  camera.permission === 'denied' ? 'bg-red-100 text-red-800' :\n                  'bg-yellow-100 text-yellow-800'\n                }`}>\n                  {camera.permission}\n                </span>\n              </div>\n              \n              <div className=\"flex justify-between\">\n                <span>WebSocket:</span>\n                <span className={`px-2 py-1 rounded text-sm ${\n                  camera.realtimeStatus === 'connected' ? 'bg-green-100 text-green-800' :\n                  camera.realtimeStatus === 'error' ? 'bg-red-100 text-red-800' :\n                  'bg-gray-100 text-gray-800'\n                }`}>\n                  {camera.realtimeStatus}\n                </span>\n              </div>\n              \n              {camera.isTranslating && (\n                <div className=\"flex justify-between\">\n                  <span>Predicción:</span>\n                  <span className=\"font-bold text-lg\">\n                    {camera.currentPrediction || '...'} ({(camera.confidence * 100).toFixed(2)}%)\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Panel de Controles */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">🎮 Controles de Prueba</h2>\n            \n            <div className=\"space-y-4\">\n              <button\n                onClick={testCameraService}\n                disabled={camera.isInitializing}\n                className=\"w-full bg-blue-500 hover:bg-blue-600 disabled:bg-blue-300 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n              >\n                {camera.isInitializing ? '⏳ Iniciando...' : '🎥 Probar CameraService'}\n              </button>\n\n              <button\n                onClick={testWebSocketService}\n                disabled={camera.permission !== 'granted' || camera.isTranslating}\n                className=\"w-full bg-green-500 hover:bg-green-600 disabled:bg-green-300 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n              >\n                {camera.isTranslating ? '🔄 Traduciendo...' : '🔌 Probar WebSocket'}\n              </button>\n\n              <button\n                onClick={testFrameCapture}\n                disabled={camera.permission !== 'granted'}\n                className=\"w-full bg-purple-500 hover:bg-purple-600 disabled:bg-purple-300 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n              >\n                📷 Probar Captura Frame\n              </button>\n\n              <button\n                onClick={() => camera.cleanup()}\n                className=\"w-full bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n              >\n                🧹 Limpiar Recursos\n              </button>\n\n              <button\n                onClick={clearResults}\n                className=\"w-full bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n              >\n                🗑️ Limpiar Resultados\n              </button>\n            </div>\n\n            {/* Información de Servicios */}\n            <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n              <h3 className=\"font-semibold text-gray-700 mb-2\">📊 Info de Servicios</h3>\n              <div className=\"text-sm text-gray-600 space-y-1\">\n                <div>Soporte: {camera.isSupported ? '✅' : '❌'}</div>\n                <div>Stats: {JSON.stringify(camera.getStats())}</div>\n                <div>Error: {camera.error || 'N/A'}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Log de Resultados */}\n        <div className=\"mt-8 bg-white rounded-xl shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">📝 Resultados de Pruebas</h2>\n          <div className=\"bg-gray-900 text-green-400 p-4 rounded-lg max-h-96 overflow-y-auto font-mono text-sm\">\n            {testResults.length === 0 ? (\n              <div className=\"text-gray-500\">No hay resultados aún... ¡Ejecuta algunas pruebas!</div>\n            ) : (\n              testResults.map((result, index) => (\n                <div key={index} className=\"mb-1\">\n                  {result}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Instrucciones */}\n        <div className=\"mt-8 bg-blue-50 border-l-4 border-blue-400 p-4\">\n          <h3 className=\"font-semibold text-blue-800 mb-2\">📋 Instrucciones de Prueba</h3>\n          <ol className=\"text-blue-700 text-sm space-y-1\">\n            <li>1. Haz clic en \"Probar CameraService\" para inicializar la cámara</li>\n            <li>2. Permite el acceso a la cámara cuando se solicite</li>\n            <li>3. Prueba \"Probar WebSocket\" para verificar la conexión</li>\n            <li>4. Usa \"Probar Captura Frame\" para verificar que los frames se capturan</li>\n            <li>5. Observa la consola del navegador para logs detallados</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}